spring.profiles.active=${build.profile.id}
spring.application.name=dili-scheduler
server.port=8281
server.servlet.context-path=
#swagger
#设置测试请求的host
springfox.documentation.swagger.v2.host=uap.diligrp.com
#配置获取api docs json数据的请求路径 ，默认为/v2/api-docs：
springfox.documentation.swagger.v2.path=/swagger/api-docs

#启动项配置
web.enable=true
beetl.enable=true
quartz.enabled=true
web.instanceResolver=true
#swagger.enable=false
#redis.enable=false
#mongodb.enable=true
#uid.enable=true
#mq.enable=true
#freemarker.enable=true

#spring.redis.database=2
#spring.redis.password=
#spring.redis.port=6379
## 连接超时时间（毫秒）
#spring.redis.timeout=1000ms
## 连接池中的最大空闲连接 默认 8
#spring.redis.lettuce.pool.max-idle=8
## 连接池中的最小空闲连接 默认 0
#spring.redis.lettuce.pool.min-idle=0
## 连接池最大连接数（使用负值表示没有限制） 默认 8
#spring.redis.lettuce.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
#spring.redis.lettuce.pool.max-wait=-1
#spring.redis.sentinel.master= # name of Redis client
#spring.redis.sentinel.nodes= # comma-separated list of host:port pairs

#logback
#logging.level.com.dili.yqyw.gateway=INFO
#logging.level.root=INFO
#logging.file=D:/uap.log
logging.config=classpath:conf/logback-springboot.xml


#swagger,访问地址:http://host:port/swagger-ui.html

swagger.basePackage=com.dili.uap.controller,com.dili.uap.api
#druid监控，访问地址:http://uap.diligrp.com/druid/login.html
#druidFilter.enable=true
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.statViewServlet.loginUsername=admin
spring.datasource.druid.statViewServlet.loginPassword=123456
spring.datasource.druid.statViewServlet.resetEnable=true
spring.datasource.druid.statViewServlet.allow=
spring.datasource.druid.statViewServlet.deny=

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.maxActive=20
spring.datasource.druid.initialSize=1
spring.datasource.druid.maxWait=60000
spring.datasource.druid.minIdle=1
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=select 1
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxOpenPreparedStatements=20
spring.datasource.druid.filters=stat,slf4j
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#spring.datasource.druid.useGlobalDataSourceStat=true

spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.config.enabled=true
spring.datasource.druid.filter.wall.config.multiStatementAllow=true
spring.datasource.druid.filter.wall.config.noneBaseStatementAllow=true

#mybatis
mybatis.mapperLocations=classpath*:mapper/*.xml
mybatis.typeAliasesPackage=com.dili.scheduler.domain
mybatis.configLocation=classpath:conf/mybatis-config.xml

#mybatis mapper
#mapper.mappers[0]=com.dili.ss.base.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL
mapper.enable-method-annotation=true
mapper.safe-delete=true
mapper.safe-update=true
#mybatis pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

# ============ admin server\u7BA1\u7406\u914D\u7F6Est ============
management.endpoints.web.exposure.include=*

spring.boot.admin.client.enabled=true
spring.boot.admin.client.url[0]=http://localhost:8080
#admin server2.0\u5F00\u542Fsecurity\u540E\uFF0C\u65E0\u6CD5\u6388\u6743\u901A\u8FC7
#spring.boot.admin.client.username=admin
#spring.boot.admin.client.password=123456
#spring.boot.admin.client.instance.metadata.user.name=${spring.boot.admin.client.username}
#spring.boot.admin.client.instance.metadata.user.password=${spring.boot.admin.client.password}
spring.boot.admin.client.instance.name=uap
##admin server\u9700\u8981\u7684\u5730\u5740\uFF0Cactuator\u6839\u5730\u5740
##Management-url to register with. Can be overridden in case the reachable url is different (e.g. Docker).
#Guessed based on management-base-url and management.context-path.
spring.boot.admin.client.instance.management-url=http://uap.diligrp.com/actuator
#Base url for computing the management-url to register with. The path is inferred at runtime, and appended to the base url.
#Guessed based on management.port, service-url and server.servlet-path.
spring.boot.admin.client.instance.management-base-url=http://uap.diligrp.com/actuator
#spring.boot.admin.client.instance.service-base-url=http://crmweb.diligrp.com/
spring.boot.admin.client.instance.health-url=http://uap.diligrp.com/actuator/health
#Use the ip-address rather than the hostname in the guessed urls.
#If server.address / management.address is set, it get used. Otherwise the IP address returned from InetAddress.getLocalHost() gets used.
# \u89E3\u51B3windows\u4E0B\u8FD0\u884C\u65F6\u65E0\u6CD5\u8BC6\u522B\u4E3B\u673A\u540D\u7684\u95EE\u9898
spring.boot.admin.client.instance.prefer-ip=true
##\u5BA2\u6237\u7AEF\u5E94\u7528\u63D0\u4F9B\u7684\u670D\u52A1\u5730\u5740
spring.boot.admin.client.instance.service-url=http://uap.diligrp.com/

#\u4ECEpom.xml\u4E2D\u83B7\u53D6
info.name="@project.name@"
info.description="@project.description@"
info.version="@project.version@"
info.spring-boot-version="@project.parent.version@"
# ============ admin server\u7BA1\u7406\u914D\u7F6Eend ============

#用于RPC
uap.contextPath=http://uap.diligrp.com

error.page.loginPage=http://uap.diligrp.com/login/toLogin.html
error.page.indexPage=http://uap.diligrp.com/index/index.html
